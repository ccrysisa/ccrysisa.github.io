<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>KZnight&#39;s Blog</title>
    <link>https://ccrysisa.github.io/</link>
    <description>这是我的 Hugo FixIt 博客网站</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (ccrysisa)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (ccrysisa)</webMaster><lastBuildDate>Sat, 16 Mar 2024 10:59:36 &#43;0800</lastBuildDate>
      <atom:link href="https://ccrysisa.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>Linux 核心设计/实作 (Linux Kernel Internals)</title>
  <link>https://ccrysisa.github.io/posts/linux2023/</link>
  <pubDate>Wed, 28 Feb 2024 20:46:33 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux2023/</guid>
  <description><![CDATA[<blockquote>
<p>在 Linux 核心设计/实作 Spring 2023 课程进度页面的原始档案的基础上，稍作修改以记录我的学习进度</p>
</blockquote>]]></description>
</item>
<item>
  <title>Linux 核心的 hash table 实作</title>
  <link>https://ccrysisa.github.io/posts/linux-hashtable/</link>
  <pubDate>Sat, 16 Mar 2024 10:59:36 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux-hashtable/</guid>
  <description><![CDATA[<blockquote>
<p>Linux 核心如同其它复杂的资讯系统，也提供 <a href="https://en.wikipedia.org/wiki/Hash_table"target="_blank" rel="external nofollow noopener noreferrer">hash table</a> 的实作，但其原始程式码中却藏有间接指针 (可参见 <a href="https://hackmd.io/@sysprog/c-linked-list"target="_blank" rel="external nofollow noopener noreferrer">你所不知道的 C 语言: linked list 和非连续内存</a>) 的巧妙和数学奥秘。</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 函数呼叫篇</title>
  <link>https://ccrysisa.github.io/posts/c-function/</link>
  <pubDate>Fri, 15 Mar 2024 10:40:59 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-function/</guid>
  <description><![CDATA[<blockquote>
<p>本講座將帶著學員重新探索函式呼叫背後的原理，從程式語言和計算機結構的發展簡史談起，讓學員自電腦軟硬體演化過程去掌握 calling convention 的考量，伴隨著 stack 和 heap 的操作，再探討 C 程式如何處理函式呼叫、跨越函式間的跳躍 (如 <a href="https://man7.org/linux/man-pages/man3/setjmp.3.html"target="_blank" rel="external nofollow noopener noreferrer">setjmp</a> 和 <a href="https://linux.die.net/man/3/longjmp"target="_blank" rel="external nofollow noopener noreferrer">longjmp</a>)，再來思索資訊安全和執行效率的議題。</p>
</blockquote>]]></description>
</item>
<item>
  <title>并行程序设计: 执行顺序</title>
  <link>https://ccrysisa.github.io/posts/concurrency-ordering/</link>
  <pubDate>Mon, 11 Mar 2024 16:23:57 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/concurrency-ordering/</guid>
  <description><![CDATA[]]></description>
</item>
<item>
  <title>并行程序设计: 概念</title>
  <link>https://ccrysisa.github.io/posts/concurrency-concepts/</link>
  <pubDate>Fri, 08 Mar 2024 17:29:25 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/concurrency-concepts/</guid>
  <description><![CDATA[<blockquote>
<p>透过建立 Concurrency 和 Parallelism、Mutex 与 Semaphore 的基本概念，本讲座将透过 POSIX Tread 探讨 thread pool, Lock-Free Programming, lock-free 使用的 atomic 操作, memory ordering, M:N threading model 等进阶议题。</p>
</blockquote>]]></description>
</item>
<item>
  <title>openEuler RISC-V 系统: QEMU 仿真和 Mugen 测试框架</title>
  <link>https://ccrysisa.github.io/posts/openeuler-riscv-qemu-mugen/</link>
  <pubDate>Thu, 07 Mar 2024 14:48:21 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/openeuler-riscv-qemu-mugen/</guid>
  <description><![CDATA[<blockquote>
<p>本文对通过 QEMU 仿真 RISC-V 环境并启动 OpenEuler RISC-V 系统的流程进行详细介绍，以及介绍如何通过 <a href="https://gitee.com/openeuler/mugen"target="_blank" rel="external nofollow noopener noreferrer">mugen</a> 测试框架来对 RISC-V 版本的 openEuler 进行系统、软件等方面测试，并根据测试日志对错误原因进行分析。</p>
</blockquote>]]></description>
</item>
<item>
  <title>基于 C 语言标准研究与系统程序安全议题</title>
  <link>https://ccrysisa.github.io/posts/c-std-security/</link>
  <pubDate>Tue, 05 Mar 2024 16:32:40 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-std-security/</guid>
  <description><![CDATA[<blockquote>
<p>借由阅读 C 语言标准理解规范是研究系统安全最基础的步骤，但很多人都忽略阅读规范这点，而正因对于规范的不了解、撰写程序的不严谨，导致漏洞的产生的案例比比皆是，例如 2014 年的 OpenSSL Heartbleed Attack<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> 便是便是因为使用 memcpy 之际缺乏对应内存范围检查，造成相当大的危害。本文重新梳理 C 语言程序设计的细节，并借由调试器帮助理解程序的运作。</p>
</blockquote>]]></description>
</item>
<item>
  <title>Crust of Rust: Sorting Algorithms</title>
  <link>https://ccrysisa.github.io/posts/orst/</link>
  <pubDate>Mon, 04 Mar 2024 15:02:28 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/orst/</guid>
  <description><![CDATA[<blockquote>
<p>In this Crust of Rust episode, we implement some common sorting algorithms in Rust. This episode doesn't aim to explain any single concept, but rather showcase what writing &ldquo;normal&rdquo; Rust code is like, and explaining various &ldquo;odd bits&rdquo; we come across along the way. The thinking here is that sorting algorithms are both familiar and easy to compare across languages, so this might serve as a good bridge into Rust if you are familiar with other languages.</p>
</blockquote>]]></description>
</item>
<item>
  <title>Linux 核心设计: 发展动态回顾</title>
  <link>https://ccrysisa.github.io/posts/linux-dev-review/</link>
  <pubDate>Sun, 03 Mar 2024 16:07:14 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux-dev-review/</guid>
  <description><![CDATA[<blockquote>
<p>本講座將以 Thorsten Leemhuis 在 FOSDEM 2020 開場演說 &ldquo;Linux kernel – Solving big problems in small steps for more than 20 years&rdquo; (slides) 為主軸，嘗試歸納自 21 世紀第一年開始的 Linux 核心 2.4 版到如今的 5.x 版，中間核心開發者如何克服 SMP (Symmetric multiprocessing), scalability, 及各式硬體架構和周邊裝置支援等難題，過程中提出全面移除 BKL (Big kernel lock)、實作虛擬化技術 (如 Xen 和 KVM)、提出 namespace 和 cgroups 從而確立容器化 (container) 的能力，再來是核心發展的明星技術 eBPF 會在既有的基礎之上，帶來 XDP 和哪些令人驚豔的機制呢？又，Linux 核心終於正式納入發展十餘年的 PREEMPT_RT，使得 Linux 核心得以成為硬即時的作業系統，對內部設計有哪些衝擊？AIO 後繼的 io_uring 讓 Linux 有更優雅且高效的非同步 I/O 存取，我們該如何看待？</p>
</blockquote>]]></description>
</item>
<item>
  <title>RISC-V Optimization Guide</title>
  <link>https://ccrysisa.github.io/posts/riscv-optimization-guide/</link>
  <pubDate>Thu, 29 Feb 2024 23:44:29 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/riscv-optimization-guide/</guid>
  <description><![CDATA[<blockquote>
<p>The intention is to give specific actionable optimization recommendations for software developers writing code for RISC-V application processors.</p>
<p>近日 RISE 基金会发布了一版 《RISC-V Optimization Guide》，其目的是为给 RISC-V 应用处理器编写代码的软件开发人员提供具体可行的优化建议。本次活动的主要内容是解读和讨论该文档内容。</p>
</blockquote>]]></description>
</item>
</channel>
</rss>
