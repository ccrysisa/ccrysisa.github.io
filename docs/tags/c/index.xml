<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>C - 标签 - KZnight&#39;s Blog</title>
    <link>https://ccrysisa.github.io/tags/c/</link>
    <description>C - 标签 | KZnight&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (ccrysisa)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (ccrysisa)</webMaster><lastBuildDate>Sat, 08 Jun 2024 10:52:10 &#43;0800</lastBuildDate><atom:link href="https://ccrysisa.github.io/tags/c/" rel="self" type="application/rss+xml" /><item>
  <title>Linux 核心设计: 2023q2 第二周测验题</title>
  <link>https://ccrysisa.github.io/posts/linux2023-quiz2/</link>
  <pubDate>Sat, 08 Jun 2024 10:52:10 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux2023-quiz2/</guid>
  <description><![CDATA[<div class="details admonition abstract open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-list-ul fa-fw" aria-hidden="true"></i>摘要<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">目的: 检验学员对 bitwise 的认知</div>
    </div>
  </div>]]></description>
</item>
<item>
  <title>Linux 核心设计: 2023q1 第一周测验题</title>
  <link>https://ccrysisa.github.io/posts/linux2023-quiz1/</link>
  <pubDate>Fri, 07 Jun 2024 10:33:35 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux2023-quiz1/</guid>
  <description><![CDATA[<div class="details admonition abstract open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-list-ul fa-fw" aria-hidden="true"></i>摘要<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">目的: 检验学员对 linked list 的认知</div>
    </div>
  </div>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 浮点数</title>
  <link>https://ccrysisa.github.io/posts/c-floating-point/</link>
  <pubDate>Tue, 04 Jun 2024 23:59:50 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-floating-point/</guid>
  <description><![CDATA[<blockquote>
<p>工程領域往往是一系列的取捨結果，浮點數更是如此，在軟體發開發有太多失誤案例源自工程人員對浮點數運算的掌握不足，本議程希望藉由探討真實世界的血淋淋案例，帶著學員思考 IEEE 754 規格和相關軟硬體考量點，最後也會探討在深度學習領域為了改善資料處理效率，而引入的 BFloat16 這樣的新標準</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 编译器和最佳化原理篇</title>
  <link>https://ccrysisa.github.io/posts/c-compiler-optimization/</link>
  <pubDate>Wed, 24 Apr 2024 21:09:59 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-compiler-optimization/</guid>
  <description><![CDATA[<blockquote>
<p>編譯器最佳化篇將以 gcc / llvm 為探討對象，簡述編譯器如何運作，以及如何實現最佳化，佐以探究 C 編譯器原理和案例分析，相信可以釐清許多人對 C 編譯器的誤解，從而開發出更可靠、更高效的程式。</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 未定义/未指定行为篇</title>
  <link>https://ccrysisa.github.io/posts/c-undefined-behavior/</link>
  <pubDate>Wed, 24 Apr 2024 21:09:40 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-undefined-behavior/</guid>
  <description><![CDATA[<blockquote>
<p>C 語言最初為了開發 UNIX 和系統軟體而生，本質是低階的程式語言，在語言規範層級存在 undefined behavior，可允許編譯器引入更多最佳化</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 编译器原理和案例分析</title>
  <link>https://ccrysisa.github.io/posts/c-compiler-construction/</link>
  <pubDate>Tue, 23 Apr 2024 15:17:38 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-compiler-construction/</guid>
  <description><![CDATA[<blockquote>
<p>AMaCC 是由成功大學師生開發的 self-compiling 的 C 語言編譯器，可產生 Arm 架構的執行檔 (ELF 格式，運作在 GNU/Linux)、也支援 just-in-time (JIT) 編譯和執行，原始程式碼僅 1500 行，在這次講座中，我們就來揭開 AMaCC 背後的原理和實作議題。</p>
<p>預期會接觸到 IR (Intermediate representation), dynamic linking, relocation, symbol table, parsing tree, language frontend, Arm 指令編碼和 ABI 等等。</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 技巧篇</title>
  <link>https://ccrysisa.github.io/posts/c-trick/</link>
  <pubDate>Wed, 10 Apr 2024 16:06:08 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-trick/</guid>
  <description><![CDATA[<blockquote>
<p>本次講座將選定幾個案例，藉此解說 C 語言程式設計的技巧，像是對矩陣操作進行包裝、初始化特定結構的成員、追蹤物件配置的記憶體、Smart Pointer 等等。</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: goto 和流程控制篇</title>
  <link>https://ccrysisa.github.io/posts/c-control-flow/</link>
  <pubDate>Fri, 05 Apr 2024 11:39:34 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-control-flow/</guid>
  <description><![CDATA[<blockquote>
<p>goto 在 C 語言被某些人看做是妖魔般的存在，不過實在不用這樣看待，至少在 Linux 核心原始程式碼中，goto 是大量存在 (跟你想像中不同吧)。有時不用 goto 會寫出更可怕的程式碼。</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 前置处理器应用篇</title>
  <link>https://ccrysisa.github.io/posts/c-preprocessor/</link>
  <pubDate>Mon, 25 Mar 2024 22:55:44 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-preprocessor/</guid>
  <description><![CDATA[<blockquote>
<p>C 语言之所以不需要时常发布新的语言特性又可以保持活力，前置处理器 (preprocessor) 是很重要的因素，有心者可进行「扩充」C 语言。</p>
</blockquote>]]></description>
</item>
<item>
  <title>你所不知道的 C 语言: 递归调用篇</title>
  <link>https://ccrysisa.github.io/posts/c-recursion/</link>
  <pubDate>Sat, 16 Mar 2024 20:56:18 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-recursion/</guid>
  <description><![CDATA[<blockquote>
<p>在许多应用程序中，递归 (recursion) 可以简单又优雅地解决貌似繁琐的问题，也就是不断地拆解原有问题为相似的子问题，直到无法拆解为止，并且定义最简化状况的处理机制，一如数学思维。递归对 C 语言程序开发者来说，绝对不会陌生，但能掌握者却少，很多人甚至难以讲出汉诺塔之外的使用案例。</p>
<p>究竟递归是如何优雅地解决真实世界的问题，又如何兼顾执行效率呢》我们从运作原理开始探讨，搭配若干 C 程序解说，并且我们将以简化过的 UNIX 工具为例，分析透过递归来大幅缩减程式码。</p>
<p>或许跟你想象中不同，Linux 核心的原始程式码里头也用到递归函数呼叫，特别在较复杂的实作，例如文件系统，善用递归可大幅缩减程式码，但这也导致追踪程序运作的难度大增。</p>
</blockquote>]]></description>
</item>
</channel>
</rss>
