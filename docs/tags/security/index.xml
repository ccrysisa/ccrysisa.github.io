<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Security - 标签 - KZnight&#39;s Blog</title>
    <link>https://ccrysisa.github.io/tags/security/</link>
    <description>Security - 标签 | KZnight&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (ccrysisa)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (ccrysisa)</webMaster><lastBuildDate>Tue, 05 Mar 2024 16:32:40 &#43;0800</lastBuildDate><atom:link href="https://ccrysisa.github.io/tags/security/" rel="self" type="application/rss+xml" /><item>
  <title>基于 C 语言标准研究与系统程序安全议题</title>
  <link>https://ccrysisa.github.io/posts/c-std-security/</link>
  <pubDate>Tue, 05 Mar 2024 16:32:40 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-std-security/</guid>
  <description><![CDATA[<blockquote>
<p>借由阅读 C 语言标准理解规范是研究系统安全最基础的步骤，但很多人都忽略阅读规范这点，而正因对于规范的不了解、撰写程序的不严谨，导致漏洞的产生的案例比比皆是，例如 2014 年的 OpenSSL Heartbleed Attack<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> 便是便是因为使用 memcpy 之际缺乏对应内存范围检查，造成相当大的危害。本文重新梳理 C 语言程序设计的细节，并借由调试器帮助理解程序的运作。</p>
</blockquote>]]></description>
</item>
<item>
  <title>Computer Network 101-1</title>
  <link>https://ccrysisa.github.io/posts/network/</link>
  <pubDate>Sun, 14 Jan 2024 12:09:38 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/network/</guid>
  <description><![CDATA[<p>以清大黄能富老师主讲的计算机网路概论课程为基础，授课顺序调整为更符合直觉的 L3、L4、L2，增加 IPv6 相关内容以及 Linux network stack 有关的资料。</p>]]></description>
</item>
</channel>
</rss>
