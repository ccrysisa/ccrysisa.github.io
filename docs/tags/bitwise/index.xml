<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Bitwise - 标签 - KZnight&#39;s Blog</title>
    <link>https://ccrysisa.github.io/tags/bitwise/</link>
    <description>Bitwise - 标签 - KZnight&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (ccrysisa)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (ccrysisa)</webMaster><lastBuildDate>Fri, 23 Feb 2024 13:13:33 &#43;0800</lastBuildDate><atom:link href="https://ccrysisa.github.io/tags/bitwise/" rel="self" type="application/rss+xml" /><item>
  <title>你所不知道的 C 语言: bitwise 操作</title>
  <link>https://ccrysisa.github.io/posts/c-bitwise/</link>
  <pubDate>Fri, 23 Feb 2024 13:13:33 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/c-bitwise/</guid>
  <description><![CDATA[<blockquote>
<p>Linux 核心原始程式码存在大量 bit(-wise) operations (简称 bitops)，颇多乍看像是魔法的 C 程式码就是 bitops 的组合。</p>
</blockquote>]]></description>
</item>
<item>
  <title>解读计算机编码</title>
  <link>https://ccrysisa.github.io/posts/binary-representation/</link>
  <pubDate>Sun, 31 Dec 2023 15:43:50 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/binary-representation/</guid>
  <description><![CDATA[<blockquote>
<p>人们对数学的加减运算可轻易在脑中辨识符号并理解其结果，但电脑做任何事都受限于实体资料储存及操作方式，换言之，电脑硬体实际只认得 0 和 1，却不知道符号 + 和 - 在数学及应用场域的意义，於是工程人员引入「补数」以便在二进位系统中，表达人们认知上的正负数。但您有没有想过，为何「二补数」(2’s complement) 被电脑广泛采用呢？背後的设计考量又是什麽？本文尝试从数学观点去解读编码背後的原理，并佐以资讯安全及程式码最佳化的考量，探讨二补数这样的编码对于程式设计有何关键影响。</p>
</blockquote>]]></description>
</item>
</channel>
</rss>
