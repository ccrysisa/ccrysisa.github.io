<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Linux - 标签 - KZnight&#39;s Blog</title>
    <link>https://ccrysisa.github.io/tags/linux/</link>
    <description>Linux - 标签 | KZnight&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (ccrysisa)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (ccrysisa)</webMaster><lastBuildDate>Sun, 09 Jun 2024 19:50:03 &#43;0800</lastBuildDate><atom:link href="https://ccrysisa.github.io/tags/linux/" rel="self" type="application/rss+xml" /><item>
  <title>Linux 核心设计/实作 (Linux Kernel Internals)</title>
  <link>https://ccrysisa.github.io/posts/linux2023/</link>
  <pubDate>Wed, 28 Feb 2024 20:46:33 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux2023/</guid>
  <description><![CDATA[<blockquote>
<p>在「Linux 核心设计/实作」Spring 2023 课程进度页面的原始档案的基础上，稍作修改以记录我的学习进度</p>
</blockquote>]]></description>
</item>
<item>
  <title>从 Revolution OS 看操作系统生态变化</title>
  <link>https://ccrysisa.github.io/posts/revolution-os/</link>
  <pubDate>Sun, 09 Jun 2024 19:50:03 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/revolution-os/</guid>
  <description><![CDATA[<blockquote>
<p>2001 年，J. T. S. Moore 以自由軟體和開放原始碼軟體發展為主題，導演相當可貴的紀錄片《Revolution OS》，訪談若干先鋒者，是理解黑客 (hacker)、 GNU 計畫、自由軟體基金會 (FSF)、Linux 核心 (kernel)、開放原始碼 (open source) 和自由軟體 (free software) 基於不同理念各自發展、Netscape 宣佈 Mozilla 開放原始碼專案、基於 Apache 和一系列開放原始碼技術的公司、在 NASDAQ 上市等等歷程的第一手資訊。</p>
</blockquote>]]></description>
</item>
<item>
  <title>Linux 核心设计: 2023q1 第一周测验题</title>
  <link>https://ccrysisa.github.io/posts/linux2023-quiz1/</link>
  <pubDate>Fri, 07 Jun 2024 10:33:35 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux2023-quiz1/</guid>
  <description><![CDATA[<div class="details admonition abstract open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-list-ul fa-fw" aria-hidden="true"></i>摘要<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">目的: 检验学员对 linked list 的认知</div>
    </div>
  </div>]]></description>
</item>
<item>
  <title>Linux 核心的红黑树</title>
  <link>https://ccrysisa.github.io/posts/linux-rbtree/</link>
  <pubDate>Fri, 12 Apr 2024 19:00:59 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux-rbtree/</guid>
  <description><![CDATA[<blockquote>
<p>Linux 核心原始程式碼中，許多地方出現紅黑樹的蹤影，例如：hr_timer 使用紅黑樹來記錄計時器 (timer) 端發出的要求、ext3 檔案系統使用紅黑樹來追蹤目錄內容變更，以及 CFS (Completely Fair Scheduler) 這個 Linux 預設 CPU 排程器，由於需要頻繁地插入跟移除節點 (任務)，因此開發者選擇用紅黑樹 (搭配一些效能調整)。VMA（Virtual Memory Area）也用紅黑樹來紀錄追蹤頁面 (page) 變更，因為後者不免存在頻繁的讀取 VMA 結構，如 page fault 和 mmap 等操作，且當大量的已映射 (mapped) 區域時存在時，若要尋找某個特定的虛擬記憶體地址，鏈結串列 (linked list) 的走訪成本過高，因此需要一種資料結構以提供更有效率的尋找，於是紅黑樹就可勝任。</p>
</blockquote>]]></description>
</item>
<item>
  <title>并行程序设计: POSIX Threads</title>
  <link>https://ccrysisa.github.io/posts/posix-threads/</link>
  <pubDate>Wed, 10 Apr 2024 16:09:35 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/posix-threads/</guid>
  <description><![CDATA[<blockquote>
<p>POSIX (Portable Operating System Interfaces) is a family of standards for maintaining compatibility between operating systems. POSIX is a Unix-like operating system environment and is currently available on Unix/Linux, Windows, OS/2 and DOS.</p>
<p>Pthreads (POSIX Threads) is a POSIX standard for threads. The standard, POSIX.1c thread extension, defines thread creation and manipulation. This standard defines thread management, mutexes, conditions, read/write locks, barriers, etc. Except for the monitors, all features are available in Pthreads.</p>
</blockquote>]]></description>
</item>
<item>
  <title>计算机系统基础</title>
  <link>https://ccrysisa.github.io/posts/ics/</link>
  <pubDate>Sun, 31 Mar 2024 16:03:59 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/ics/</guid>
  <description><![CDATA[<p>Introduction to Computer Systems (ICS)</p>]]></description>
</item>
<item>
  <title>Deepin 20.9 KVM 安装和管理</title>
  <link>https://ccrysisa.github.io/posts/deepin-kvm/</link>
  <pubDate>Thu, 28 Mar 2024 12:21:48 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/deepin-kvm/</guid>
  <description><![CDATA[<p>本篇主要介绍在 deepin20.9 操作系统平台下，使用 KVM 虚拟化技术来创建和安装 Linux 发行版，并以创建安装 openEuler 22.03 LTS SP3 的 KVM 虚拟机作为示范，让学员领略 KVM 虚拟化技术的强大魅力。</p>]]></description>
</item>
<item>
  <title>操作系统: 设计与实现</title>
  <link>https://ccrysisa.github.io/posts/osdi/</link>
  <pubDate>Sun, 24 Mar 2024 10:01:43 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/osdi/</guid>
  <description><![CDATA[<p>Operating Systems: Design and Implementation</p>]]></description>
</item>
<item>
  <title>Linux 核心的 hash table 实作</title>
  <link>https://ccrysisa.github.io/posts/linux-hashtable/</link>
  <pubDate>Sat, 16 Mar 2024 10:59:36 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/linux-hashtable/</guid>
  <description><![CDATA[<blockquote>
<p>Linux 核心如同其它复杂的资讯系统，也提供 <a href="https://en.wikipedia.org/wiki/Hash_table"target="_blank" rel="external nofollow noopener noreferrer">hash table</a> 的实作，但其原始程式码中却藏有间接指针 (可参见 <a href="https://hackmd.io/@sysprog/c-linked-list"target="_blank" rel="external nofollow noopener noreferrer">你所不知道的 C 语言: linked list 和非连续内存</a>) 的巧妙和数学奥秘。</p>
</blockquote>]]></description>
</item>
<item>
  <title>并行程序设计: 执行顺序</title>
  <link>https://ccrysisa.github.io/posts/concurrency-ordering/</link>
  <pubDate>Mon, 11 Mar 2024 16:23:57 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/concurrency-ordering/</guid>
  <description><![CDATA[<blockquote>
<p>多執行緒環境下，程式會出問題，往往在於執行順序的不確定性。一旦顧及分散式系統 (distributed systems)，執行順序和衍生的時序 (timing) 問題更加複雜。</p>
<p>我們將從如何定義程式執行的順序開始說起，為了簡單起見，我們先從單執行緒的觀點來看執行順序這件事，其中最關鍵知識就是 Sequenced-before，你將會發現就連單執行緒的程式，也可能會產生不確定的執行順序。</p>
</blockquote>]]></description>
</item>
</channel>
</rss>
