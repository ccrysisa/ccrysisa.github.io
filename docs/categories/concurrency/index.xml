<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Concurrency - 分类 - KZnight&#39;s Blog</title>
    <link>https://ccrysisa.github.io/categories/concurrency/</link>
    <description>Concurrency - 分类 - KZnight&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>caijiaxin@dragonos.org (ccrysisa)</managingEditor>
      <webMaster>caijiaxin@dragonos.org (ccrysisa)</webMaster><lastBuildDate>Wed, 10 Apr 2024 16:09:35 &#43;0800</lastBuildDate><atom:link href="https://ccrysisa.github.io/categories/concurrency/" rel="self" type="application/rss+xml" /><item>
  <title>并行程序设计: POSIX Threads</title>
  <link>https://ccrysisa.github.io/posts/posix-threads/</link>
  <pubDate>Wed, 10 Apr 2024 16:09:35 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/posix-threads/</guid>
  <description><![CDATA[]]></description>
</item>
<item>
  <title>并行程序设计: 执行顺序</title>
  <link>https://ccrysisa.github.io/posts/concurrency-ordering/</link>
  <pubDate>Mon, 11 Mar 2024 16:23:57 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/concurrency-ordering/</guid>
  <description><![CDATA[<blockquote>
<p>多執行緒環境下，程式會出問題，往往在於執行順序的不確定性。一旦顧及分散式系統 (distributed systems)，執行順序和衍生的時序 (timing) 問題更加複雜。</p>
<p>我們將從如何定義程式執行的順序開始說起，為了簡單起見，我們先從單執行緒的觀點來看執行順序這件事，其中最關鍵知識就是 Sequenced-before，你將會發現就連單執行緒的程式，也可能會產生不確定的執行順序。</p>
</blockquote>]]></description>
</item>
<item>
  <title>并行程序设计: 概念</title>
  <link>https://ccrysisa.github.io/posts/concurrency-concepts/</link>
  <pubDate>Fri, 08 Mar 2024 17:29:25 &#43;0800</pubDate>
  <author>ccrysisa</author>
  <guid>https://ccrysisa.github.io/posts/concurrency-concepts/</guid>
  <description><![CDATA[<blockquote>
<p>透过建立 Concurrency 和 Parallelism、Mutex 与 Semaphore 的基本概念，本讲座将透过 POSIX Tread 探讨 thread pool, Lock-Free Programming, lock-free 使用的 atomic 操作, memory ordering, M:N threading model 等进阶议题。</p>
</blockquote>]]></description>
</item>
</channel>
</rss>
